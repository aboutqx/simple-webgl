(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{67:function(t,i,e){"use strict";e.d(i,"a",(function(){return c}));var r=e(2),a=e(14),n=e(0),s=e(1);class c{constructor(){Object(r.a)(this,"ray",void 0),Object(r.a)(this,"aabb",void 0)}setRay(t,i,e,r,c){t-=n.b.getBoundingClientRect().left,i-=n.b.getBoundingClientRect().top;let o=2*t/n.b.clientWidth-1,u=1-2*i/n.b.clientHeight,h=(s.e.fromValues(o,u,1),s.f.fromValues(o,u,-1,1)),l=s.f.create();s.b.invert(e,e),s.b.multiply(l,e,h),l=s.f.fromValues(l[0],l[1],-1,0);let m=s.f.create();s.b.invert(r,r),s.b.multiply(m,r,l);let d=s.e.fromValues(m[0],m[1],m[2]);this.ray=new a.d(c,s.e.normalize(d,d))}castRay(t,i="AABB"){let e=!1;return"AABB"==i&&(this.aabb=a.a.fromVertices(t),e=c.rayAABB(this.aabb,this.ray)),e}static rayAABB(t,i){const e=t.min,r=t.max,a=(e[0]-i.origin[0])/(0==i.direction[0]?1e-5:i.direction[0]),n=(r[0]-i.origin[0])/(0==i.direction[0]?1e-5:i.direction[0]),s=(e[1]-i.origin[1])/(0==i.direction[1]?1e-5:i.direction[1]),c=(r[1]-i.origin[1])/(0==i.direction[1]?1e-5:i.direction[1]),o=(e[2]-i.origin[2])/(0==i.direction[2]?1e-5:i.direction[2]),u=(r[2]-i.origin[2])/(0==i.direction[2]?1e-5:i.direction[2]),h=Math.max(Math.max(Math.min(a,n),Math.min(s,c)),Math.min(o,u)),l=Math.min(Math.min(Math.max(a,n),Math.max(s,c)),Math.max(o,u));if(l<0)return!1;if(h>l)return!1;let m=h;return h<0&&(m=l),!0}static rayOBB(t,i){}static raySphere(){}static frustumPoint(t,i){const e=s.e.create();s.e.negate(e,i);for(let i=0;i<6;i++){if(t.planes[i].planeEquation(e)>0)return!1}return!0}static frustumSphere(t,i){const e=s.e.create();s.e.negate(e,i.origin);for(let r=0;r<6;r++){if(t.planes[r].planeEquation(e)-i.radius>0)return!1}return!0}static frustumAABB(t,i){}static frustumOBB(t,i){for(let t=0;t<6;t++)if(side-sphere.radius>0)return!1;return!0}static boxPlane(t,i){OBB}static ShpereSphere(t,i){const e=t.radius+i.radius;return s.e.dist(t.origin,i.origin)<e}static AABBAABB(t,i){const e=t.min,r=t.max,a=i.min,n=i.max;return e.x<=n.x&&r.x>=a.x&&e.y<=n.y&&r.y>=a.y&&e.z<=n.z&&r.z>=a.z}static PlanePlane(t,i){let e=s.e.cross(t,i);return 0!==s.e.length(e)}}},84:function(t,i,e){"use strict";e.r(i),e.d(i,"default",(function(){return u}));var r=e(43),a=e(42),n=e(1),s=e(0),c=(e(4),e(14)),o=e(67);class u extends r.a{constructor(){super()}init(){this.prg=this.basicColor(),this.orbital.radius=1e3}attrib(){this.mesh=a.a.sphere(1.5,30),this._caculateMatrix()}_caculateMatrix(){const t=[];let i,e,r;for(let c=0;c<10;c++){const c=(s=10,(a=.1)+Math.random()*(s-a)),o=n.b.create();let u=50*(2*Math.random()-1);i=u,u=50*(2*Math.random()-1),e=u,u=50*(2*Math.random()-1),r=u,n.b.translate(o,o,[i,e,r]),n.b.scale(o,o,[c,c,c]),t.push(o)}var a,s;this.instanceMatrix={instanceMatrix:t,inFrustum:[]},this.num=10}_inFrustum(){this.orbital.updateMatrix();const t=(new c.b).fromMatrix(this.camera.viewMatrix,this.camera.projectionMatrix);this.count=0,this.instanceMatrix.instanceMatrix.forEach((i,e)=>{const r=o.a.frustumSphere(t,c.e.fromVertices(this.mesh.vertices,i));this.instanceMatrix.inFrustum[e]=r,r&&this.count++}),console.log(`actual num: ${this.num}, draw num: ${this.count}`)}prepare(){}uniform(){this.prg.use(),this.prg.style({color:[.1,.1,.8]})}render(){s.a.clear(0,0,0),this._inFrustum(),this.instanceMatrix.instanceMatrix.forEach((t,i)=>{this.instanceMatrix.inFrustum[i]&&(this.prg.style({mMatrix:t}),s.a.draw(this.mesh))})}}}}]);