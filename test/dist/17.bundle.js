(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{33:function(t,e){t.exports="#version 300 es\n#define GLSLIFY 1\nlayout (location = 0) in vec3 position;\n\nuniform mat4 mMatrix;\nuniform mat4 vMatrix;\nuniform mat4 pMatrix;\n\nvoid main()\n{\n    gl_Position = pMatrix * vMatrix * mMatrix * vec4(position, 1.0);\n}\n"},39:function(t,e,i){"use strict";i.r(e),i.d(e,"default",function(){return v});var r=i(2),n=i(5),a=i(4),o=i(33),s=i.n(o),l=i(60),c=i.n(l),d=i(61),p=i.n(d),u=i(1),m=i(0);let h,f=u.a.identity(u.a.create());const b=[.33,.42,.18];class v extends n.default{constructor(){super(),Object(r.a)(this,"count",0)}init(){this.prg=this.compile(s.a,c.a),this.lampPrg=this.compile(s.a,p.a)}attrib(){let t=new a.a;t.bufferData([.5,-.5,-.5,.5,-.5,-.5,.5,.5,-.5,.5,.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,-.5,.5,.5,-.5,.5,.5,.5,.5,.5,.5,.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,-.5,-.5,-.5,-.5,.5,-.5,.5,.5,.5,.5,.5,.5,.5,-.5,.5,-.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,.5,.5,-.5,-.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,.5,.5,.5,.5,.5,-.5,.5,.5,-.5,.5,-.5],["position"],[3]),this.cube=t,this.lampVao=m.d.createVertexArray(),m.d.bindVertexArray(this.lampVao),m.d.bindBuffer(m.d.ARRAY_BUFFER,this.cube._buffers[0].buffer.buffer),m.d.vertexAttribPointer(0,3,m.d.FLOAT,!1,12,0),m.d.enableVertexAttribArray(0)}prepare(){m.d.enable(m.d.DEPTH_TEST),m.d.depthFunc(m.d.LEQUAL),m.d.clearColor(.3,.3,.3,1),m.d.clearDepth(1),this.camera.radius=3}uniform(){h=this.camera.viewMatrix,u.a.perspective(f,Object(m.e)(60),m.a.clientWidth/m.a.clientHeight,.1,100);let t=u.a.identity(u.a.create());this.prg.use(),this.prg.style({mMatrix:t,vMatrix:h,pMatrix:f,objectColor:[1,.5,.31],lightColor:b})}render(){m.d.clear(m.d.COLOR_BUFFER_BIT|m.d.DEPTH_BUFFER_BIT),this.cube.bind(this.prg,["position"]),this.cube.draw();let t=u.a.identity(u.a.create());u.a.translate(t,t,[1,.1,1]),u.a.scale(t,t,[.2,.2,.2]),this.lampPrg.use(),this.lampPrg.style({mMatrix:t,vMatrix:h,pMatrix:f,lightColor:b}),m.d.bindVertexArray(this.lampVao),m.d.drawArrays(m.d.TRIANGLES,0,36)}}},60:function(t,e){t.exports="#version 300 es\nprecision mediump float;\n#define GLSLIFY 1\nout vec4 FragColor;\n\nuniform vec3 objectColor;\nuniform vec3 lightColor;\n\nvoid main()\n{\n    FragColor = vec4(lightColor * objectColor, 1.0);\n}\n"},61:function(t,e){t.exports="#version 300 es\nprecision mediump float;\n#define GLSLIFY 1\nout vec4 FragColor;\nuniform vec3 lightColor;\nvoid main()\n{\n    FragColor = vec4(lightColor, 1.0); // 将向量的四个分量全部设置为1.0\n}\n"}}]);